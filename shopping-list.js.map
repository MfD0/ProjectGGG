{"version":3,"file":"shopping-list.js","sources":["../src/js/shoppingList.js"],"sourcesContent":["import { getGameByID } from './infoFromDB.js';\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n    const activeUser = JSON.parse(localStorage.getItem(\"activeUser\")); // Отримуємо активного користувача\n    const blurOverlay = document.getElementById(\"blur-overlay\"); // Елемент заблюрення\n    const redirectLoginButton = document.getElementById(\"redirect-login\"); // Кнопка переходу до авторизації\n    const shoppingListContainer = document.getElementById(\"shopping-list-container\"); // Контейнер списку покупок\n    const emptyCartMessage = document.querySelector(\".empty-cart\"); // Повідомлення про порожній кошик\n\n    if (!activeUser) {\n        // Якщо користувач не залогінений, показуємо заблюрення і повідомлення\n        blurOverlay.classList.remove(\"hidden\");\n        redirectLoginButton.addEventListener(\"click\", () => {\n            window.location.href = \"./auth.html\"; // Оновлено шлях для GitHub Pages\n        });\n    } else {\n        // Якщо користувач залогінений, ховаємо заблюрення\n        blurOverlay.classList.add(\"hidden\");\n\n        // Формуємо ключ для зберігання даних кошика\n        const cartKey = `cart_${activeUser.username}`;\n        const cart = JSON.parse(localStorage.getItem(cartKey)) || []; // Отримуємо кошик користувача\n\n        if (cart.length === 0) {\n            // Показуємо повідомлення про порожній кошик\n            emptyCartMessage.classList.remove(\"hidden\");\n        } else {\n            emptyCartMessage.classList.add(\"hidden\");\n\n            // Завантажуємо дані про ігри з бази та відображаємо їх\n            const gameDetails = await Promise.all(cart.map(id => getGameByID(id)));\n            renderShoppingList(gameDetails, shoppingListContainer, cartKey);\n        }\n    }\n});\n\nfunction renderShoppingList(games, container, cartKey) {\n    container.innerHTML = \"\"; // Очищаємо контейнер перед відображенням нового списку\n\n    games.forEach((game) => {\n        const item = document.createElement(\"div\");\n        item.classList.add(\"shopping-list-item\");\n\n        // Вміст картки гри\n        item.innerHTML = `\n            <div class=\"game-image-container\">\n                <img src=\"${game.image}\" alt=\"${game.title}\" class=\"shopping-list-image\">\n            </div>\n            <div class=\"shopping-list-details\">\n                <h3 class=\"shopping-list-title\">${game.title}</h3>\n                <p class=\"shopping-list-author\">by ${game.author}</p>\n                <p class=\"shopping-list-description\">${game.description || \"No description available\"}</p>\n            </div>\n            <button class=\"remove-game-btn\" data-id=\"${game.id}\">&times;</button>\n        `;\n\n        container.appendChild(item); // Додаємо елемент до контейнера\n    });\n\n    // Додаємо обробники видалення до кнопок\n    container.querySelectorAll(\".remove-game-btn\").forEach(button => {\n        button.addEventListener(\"click\", (event) => {\n            const gameId = button.dataset.id; // Отримуємо ID гри\n            removeGameFromCart(gameId, cartKey, container); // Видаляємо гру\n        });\n    });\n}\n\nfunction removeGameFromCart(gameId, cartKey, container) {\n    const cart = JSON.parse(localStorage.getItem(cartKey)) || []; // Отримуємо кошик користувача\n    const updatedCart = cart.filter(id => id !== gameId); // Оновлюємо кошик, видаляючи вибрану гру\n\n    localStorage.setItem(cartKey, JSON.stringify(updatedCart)); // Зберігаємо оновлений кошик\n\n    // Видаляємо елемент гри з DOM\n    const gameElement = container.querySelector(`.remove-game-btn[data-id=\"${gameId}\"]`).closest(\".shopping-list-item\");\n    if (gameElement) {\n        gameElement.remove();\n    }\n\n    // Показуємо повідомлення про порожній кошик, якщо кошик спорожнів\n    if (updatedCart.length === 0) {\n        document.querySelector(\".empty-cart\").classList.remove(\"hidden\");\n    }\n}\n"],"names":["activeUser","blurOverlay","redirectLoginButton","shoppingListContainer","emptyCartMessage","cartKey","cart","gameDetails","id","getGameByID","renderShoppingList","games","container","game","item","button","event","gameId","removeGameFromCart","updatedCart","gameElement"],"mappings":"kFAEA,SAAS,iBAAiB,mBAAoB,SAAY,CACtD,MAAMA,EAAa,KAAK,MAAM,aAAa,QAAQ,YAAY,CAAC,EAC1DC,EAAc,SAAS,eAAe,cAAc,EACpDC,EAAsB,SAAS,eAAe,gBAAgB,EAC9DC,EAAwB,SAAS,eAAe,yBAAyB,EACzEC,EAAmB,SAAS,cAAc,aAAa,EAE7D,GAAI,CAACJ,EAEDC,EAAY,UAAU,OAAO,QAAQ,EACrCC,EAAoB,iBAAiB,QAAS,IAAM,CAChD,OAAO,SAAS,KAAO,aACnC,CAAS,MACE,CAEHD,EAAY,UAAU,IAAI,QAAQ,EAGlC,MAAMI,EAAU,QAAQL,EAAW,QAAQ,GACrCM,EAAO,KAAK,MAAM,aAAa,QAAQD,CAAO,CAAC,GAAK,GAE1D,GAAIC,EAAK,SAAW,EAEhBF,EAAiB,UAAU,OAAO,QAAQ,MACvC,CACHA,EAAiB,UAAU,IAAI,QAAQ,EAGvC,MAAMG,EAAc,MAAM,QAAQ,IAAID,EAAK,IAAIE,GAAMC,EAAYD,CAAE,CAAC,CAAC,EACrEE,EAAmBH,EAAaJ,EAAuBE,CAAO,CACjE,CACJ,CACL,CAAC,EAED,SAASK,EAAmBC,EAAOC,EAAWP,EAAS,CACnDO,EAAU,UAAY,GAEtBD,EAAM,QAASE,GAAS,CACpB,MAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,oBAAoB,EAGvCA,EAAK,UAAY;AAAA;AAAA,4BAEGD,EAAK,KAAK,UAAUA,EAAK,KAAK;AAAA;AAAA;AAAA,kDAGRA,EAAK,KAAK;AAAA,qDACPA,EAAK,MAAM;AAAA,uDACTA,EAAK,aAAe,0BAA0B;AAAA;AAAA,uDAE9CA,EAAK,EAAE;AAAA,UAGtDD,EAAU,YAAYE,CAAI,CAClC,CAAK,EAGDF,EAAU,iBAAiB,kBAAkB,EAAE,QAAQG,GAAU,CAC7DA,EAAO,iBAAiB,QAAUC,GAAU,CACxC,MAAMC,EAASF,EAAO,QAAQ,GAC9BG,EAAmBD,EAAQZ,EAASO,CAAS,CACzD,CAAS,CACT,CAAK,CACL,CAEA,SAASM,EAAmBD,EAAQZ,EAASO,EAAW,CAEpD,MAAMO,GADO,KAAK,MAAM,aAAa,QAAQd,CAAO,CAAC,GAAK,IACjC,OAAOG,GAAMA,IAAOS,CAAM,EAEnD,aAAa,QAAQZ,EAAS,KAAK,UAAUc,CAAW,CAAC,EAGzD,MAAMC,EAAcR,EAAU,cAAc,6BAA6BK,CAAM,IAAI,EAAE,QAAQ,qBAAqB,EAC9GG,GACAA,EAAY,OAAM,EAIlBD,EAAY,SAAW,GACvB,SAAS,cAAc,aAAa,EAAE,UAAU,OAAO,QAAQ,CAEvE"}