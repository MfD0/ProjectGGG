{"version":3,"file":"index.js","sources":["../src/js/glow-effects.js","../src/main.js","../src/js/scrolltop.js","../src/js/topGame.js","../src/js/categoryToggle.js","../src/js/modalWindow.js","../src/js/aboutModalWindow.js","../src/js/feedbackModalWindow.js","../src/js/reviewsModalWindow.js"],"sourcesContent":["class GlowEffectsManager {\n  constructor(options = {}) {\n    this.options = {\n      glowSize: options.glowSize || 200,\n      minDistance: options.minDistance || 300, // Мінімальна відстань між ефектами\n      effectsPerSection: options.effectsPerSection || 3, // Кількість ефектів на кожні 1000px висоти\n      sectionHeight: options.sectionHeight || 1000, // Висота секції в пікселях\n      containerSelector: options.containerSelector || 'body'\n    };\n    \n    this.container = document.querySelector(this.options.containerSelector);\n    this.effects = [];\n    \n    // Створюємо стилі\n    this.createStyles();\n    \n    // Ініціалізуємо ефекти\n    this.init();\n    \n    // Додаємо слухач на зміну розміру вікна\n    window.addEventListener('resize', this.handleResize.bind(this));\n  }\n\n  createStyles() {\n    const styleSheet = document.createElement('style');\n    styleSheet.textContent = `\n      .glow-effect {\n        position: absolute;\n        width: ${this.options.glowSize}px;\n        height: ${this.options.glowSize}px;\n        background: radial-gradient(circle, rgba(255, 255, 255, 0.3), transparent);\n        filter: blur(100px);\n        opacity: 0.6;\n        pointer-events: none;\n        transition: transform 0.5s ease;\n        animation: glowAnimation 7s infinite alternate;\n      }\n\n      @keyframes glowAnimation {\n        0% {\n          transform: translate(0, 0);\n        }\n        100% {\n          transform: translate(50px, 50px);\n        }\n      }\n    `;\n    document.head.appendChild(styleSheet);\n  }\n\n  generateRandomPosition(maxWidth, maxHeight, existingPositions) {\n    let attempts = 0;\n    const maxAttempts = 50;\n    \n    while (attempts < maxAttempts) {\n      const x = Math.random() * (maxWidth - this.options.glowSize);\n      const y = Math.random() * (maxHeight - this.options.glowSize);\n      \n      // Перевіряємо, чи нова позиція достатньо далеко від існуючих\n      const isFarEnough = existingPositions.every(pos => {\n        const distance = Math.sqrt(\n          Math.pow(x - pos.x, 2) + Math.pow(y - pos.y, 2)\n        );\n        return distance >= this.options.minDistance;\n      });\n      \n      if (isFarEnough || attempts === maxAttempts - 1) {\n        return { x, y };\n      }\n      \n      attempts++;\n    }\n  }\n\n  createGlowEffect(x, y) {\n    const effect = document.createElement('div');\n    effect.className = 'glow-effect';\n    effect.style.left = `${x}px`;\n    effect.style.top = `${y}px`;\n    return effect;\n  }\n\n  init() {\n    this.updateEffects();\n  }\n\n  updateEffects() {\n    // Видаляємо всі існуючі ефекти\n    this.effects.forEach(effect => effect.remove());\n    this.effects = [];\n    \n    const containerHeight = Math.max(\n      this.container.scrollHeight,\n      this.container.clientHeight\n    );\n    const containerWidth = this.container.clientWidth;\n    \n    // Розраховуємо кількість потрібних ефектів базуючись на висоті\n    const numberOfSections = Math.ceil(containerHeight / this.options.sectionHeight);\n    const totalEffects = numberOfSections * this.options.effectsPerSection;\n    \n    const existingPositions = [];\n    \n    // Створюємо нові ефекти\n    for (let i = 0; i < totalEffects; i++) {\n      const position = this.generateRandomPosition(\n        containerWidth,\n        containerHeight,\n        existingPositions\n      );\n      \n      existingPositions.push(position);\n      const effect = this.createGlowEffect(position.x, position.y);\n      this.container.appendChild(effect);\n      this.effects.push(effect);\n    }\n  }\n\n  handleResize() {\n    // Використовуємо debounce для оптимізації\n    clearTimeout(this.resizeTimeout);\n    this.resizeTimeout = setTimeout(() => {\n      this.updateEffects();\n    }, 150);\n  }\n}\n\n// Експортуємо клас для використання\nexport default GlowEffectsManager;","import { getAllCategories, getGamesByCategory } from './js/infoFromDB.js';\nimport GlowEffectsManager from './js/glow-effects.js';\n\nconsole.log(\"main.js start\");\n\n// Ініціалізуємо менеджер ефектів світіння\nconst glowManager = new GlowEffectsManager({\n  glowSize: 200,\n  minDistance: 300,\n  effectsPerSection: 3,\n  sectionHeight: 1000,\n  containerSelector: 'body'\n});\n\n// Витягаємо всі категорії з бази даних\nconst categories = getAllCategories();\n\n// Знаходимо контейнер для списку категорій\nconst categoriesList = document.querySelector('.categories-list');\n\n// Створення заголовка\nconst mainTitle = document.querySelector(\".topGamesTitle\");\n// Контейнер для списку ігор\nconst topGamesList = document.querySelector(\".top-games-list\");\n\n// Додаємо \"All Categories\" у список\nconst allCategoriesItem = document.createElement('li');\nallCategoriesItem.classList.add('category-item');\nallCategoriesItem.textContent = \"All Categories\";\ncategoriesList.appendChild(allCategoriesItem);\n\n// Додаємо обробник події для кнопки \"All Categories\"\nallCategoriesItem.addEventListener(\"click\", resetCategories);\n\n// Додаємо категорії у список і обробник події для кожної\nif (categories.length > 0) {\n  categories.forEach(category => {\n    const categoryItem = document.createElement('li');\n    categoryItem.classList.add('category-item');\n    categoryItem.textContent = category;\n    categoriesList.appendChild(categoryItem);\n\n    // Обробник події для кожної категорії\n    categoryItem.addEventListener(\"click\", () => {\n      displayCategoryGames(category);\n    });\n  });\n} else {\n  const emptyMessage = document.createElement('li');\n  emptyMessage.textContent = \"No categories available\";\n  categoriesList.appendChild(emptyMessage);\n}\n\n// Функція для відображення ігор за категорією\nfunction displayCategoryGames(categoryName) {\n  const games = getGamesByCategory(categoryName);\n\n  // Оновлення заголовка на назву вибраної категорії\n  mainTitle.innerHTML = `${categoryName} Games`;\n\n  // Сховати всі блоки категорій\n  document.querySelectorAll(\".game-category\").forEach((category) => {\n    category.style.display = \"none\";\n  });\n\n  // Очищення списку ігор перед додаванням нових карток\n  topGamesList.innerHTML = \"\";\n\n  // Додаємо ігри у вигляді карток у список .top-games-list\n  games.forEach(game => {\n    const gameCard = createGameCard(game);\n    topGamesList.appendChild(gameCard);\n  });\n\n  // Додаємо клас category-active для стилів карток\n  topGamesList.classList.add(\"category-active\");\n\n  // Оновлюємо ефекти світіння після зміни контенту\n  setTimeout(() => {\n    glowManager.updateEffects();\n  }, 100);\n}\n\n// Функція для скидання до початкового стану (\"All Categories\")\nfunction resetCategories() {\n  location.reload();\n}\n\n// Функція для перевірки на активність \"All Categories\"\nfunction checkAndActivateAllCategories() {\n  document.querySelectorAll(\".category-item\").forEach((btn) => btn.classList.remove(\"active-category\"));\n  allCategoriesItem.classList.add(\"active-category\");\n}\n\n// Функція для створення HTML для картки гри\nfunction createGameCard(game) {\n  const li = document.createElement('li');\n  li.id = game.id;\n  li.className = 'listener';\n  li.setAttribute('onclick', `openModal('${game.id}')`);\n\n  li.innerHTML = `\n        <div class=\"game-category-card\">\n            <div class=\"overlay-div\">\n                <img class=\"gameByCategory-img\" src=\"${game.image}\" alt=\"${game.title}\">\n                <p class=\"overlay-txt\">quick view</p>\n            </div>\n            <div class=\"game-category-details\">\n                <h3 class=\"game-category-title\">${game.title}</h3>\n                <p class=\"game-category-author\">${game.author}</p>\n            </div>\n        </div>\n    `;\n  return li;\n}\n\n// Оновлюємо ефекти світіння при завантаженні сторінки\nwindow.addEventListener('load', () => {\n  glowManager.updateEffects();\n});\n\n// Оновлюємо ефекти при зміні розміру вікна\nwindow.addEventListener('resize', () => {\n  clearTimeout(window.resizeTimer);\n  window.resizeTimer = setTimeout(() => {\n    glowManager.updateEffects();\n  }, 250);\n});\n\n\nconsole.log(\"main.js end\");","// Get the scrollTop button\nconst scrollTopButton = document.getElementById(\"scrollTopButton\");\n\n// Show or hide the button when scrolling\nwindow.onscroll = function () {\n  if (document.body.scrollTop > 300 || document.documentElement.scrollTop > 300) {\n    scrollTopButton.classList.add(\"active\");\n  } else {\n    scrollTopButton.classList.remove(\"active\");\n  }\n};\n\n// Scroll to the top when clicking the button\nscrollTopButton.onclick = function () {\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\"\n  });\n};","import { getAllCategories, getBooksByTags } from './infoFromDB.js';\n\nconst HIDDEN_CARDS_KEY = 'hiddenCards';\n\n// Завантажуємо приховані картки з localStorage\nfunction getHiddenCards() {\n    return JSON.parse(localStorage.getItem(HIDDEN_CARDS_KEY)) || [];\n}\n\n// Зберігаємо приховані картки в localStorage\nfunction saveHiddenCards(hiddenCards) {\n    localStorage.setItem(HIDDEN_CARDS_KEY, JSON.stringify(hiddenCards));\n}\n\n// Витягаємо всі категорії з бази даних\nconst categories = getAllCategories();\nconst topGames = getBooksByTags(categories);\n\n// Функція для створення HTML для картки гри\nfunction createGameCard(game) {\n    return `\n    <li id=\"${game.id}\" class=\"listener\" onclick=\"openModal('${game.id}')\">\n        <div class=\"game-category-card\">\n            <div class=\"overlay-div\">\n                <img class=\"gameByCategory-img\" src=\"${game.image}\" alt=\"${game.title}\">\n                <p class=\"overlay-txt\">quick view</p>\n            </div>\n            <div class=\"game-category-details\">\n                <h3 class=\"game-category-title\">${game.title}</h3>\n                <p class=\"game-category-author\">${game.author}</p>\n            </div>\n        </div>\n    </li>\n    `;\n}\n\n// Функція для завантаження ігор у відповідну категорію\nfunction loadGames(categoryName, games) {\n    const categoryElement = document.querySelector(`.game-category[data-category=\"${categoryName}\"]`);\n    if (!categoryElement) {\n        console.warn(`Category element not found: ${categoryName}`);\n        return;\n    }\n\n    const loader = categoryElement.querySelector('.mask');\n\n    // Отримуємо список прихованих карток\n    const hiddenCards = getHiddenCards();\n\n    // Визначаємо роль користувача\n    const activeUser = JSON.parse(localStorage.getItem(\"activeUser\"));\n    const isAdmin = activeUser && activeUser.role === 'admin';\n\n    // Фільтруємо ігри для звичайних користувачів, адміністратори бачать всі картки\n    const gamesHTML = games\n        .filter((game) => isAdmin || !hiddenCards.includes(game.id))\n        .map((game) => createGameCard(game))\n        .join('');\n\n    const gamesListElement = categoryElement.querySelector('.games-category-list');\n    if (gamesListElement) {\n        gamesListElement.innerHTML = gamesHTML;\n    }\n\n    if (loader) {\n        loader.style.display = 'none';\n    }\n}\n\n// Функція для отримання та відображення ігор по категоріях\nexport function fetchAndDisplayGames() {\n    Object.keys(topGames).forEach(categoryName => {\n        const games = topGames[categoryName];\n        loadGames(categoryName, games);\n    });\n}\n\n// Функція для створення HTML контейнера категорії\nfunction createCategoryContainer(categoryName) {\n    const container = document.createElement('div');\n    container.className = 'game-category';\n    container.setAttribute('data-category', categoryName);\n\n    const titleDiv = document.createElement('div');\n    titleDiv.className = 'category-title';\n\n    const loaderDiv = document.createElement('div');\n    loaderDiv.className = 'mask';\n    loaderDiv.innerHTML = '<div class=\"loader\"></div>';\n\n    const titleSpan = document.createElement('span');\n    titleSpan.textContent = categoryName.toUpperCase();\n    titleDiv.appendChild(titleSpan);\n\n    const gamesDiv = document.createElement('div');\n    gamesDiv.className = 'games';\n    const ul = document.createElement('ul');\n    ul.className = 'games-category-list';\n    gamesDiv.appendChild(ul);\n\n    const button = document.createElement('button');\n    button.id = categoryName.replace(/\\s+/g, '_'); // Унікальний ID для кнопки\n    button.classList.add('see-more');\n    button.textContent = 'SEE MORE';\n\n    button.addEventListener('click', (event) => {\n        scrollFuc(event, categoryName);\n    });\n\n    container.appendChild(titleDiv);\n    container.appendChild(loaderDiv);\n    container.appendChild(gamesDiv);\n    container.appendChild(button);\n\n    return container;\n}\n\n// Функція для обробки кнопки \"SEE MORE\"\nfunction scrollFuc(event, categoryName) {\n    const button = event.target;\n\n    // Знаходимо елемент у блоці Aside\n    const categoryItems = document.querySelectorAll('.category-item');\n    categoryItems.forEach(item => {\n        item.classList.remove('active-category');\n        if (item.textContent.trim() === categoryName.trim()) {\n            item.classList.add('active-category');\n        }\n    });\n\n    // Очищення glow-ефектів\n    const glowEffects = document.querySelectorAll('.glow-effect');\n    glowEffects.forEach(effect => effect.remove());\n\n    // Перезавантаження ігор\n    const games = topGames[categoryName];\n    loadGames(categoryName, games);\n\n    // Ініціалізація glow-ефектів заново\n    const glowManager = new GlowEffectsManager();\n    glowManager.updateEffects();\n}\n\n// Функція для отримання категорій та додавання контейнерів до DOM\nexport function fetchAndDisplayCategories() {\n    const topGamesList = document.querySelector('.top-games-list');\n\n    if (!topGamesList) {\n        console.error(\"Top games list container not found!\");\n        return;\n    }\n\n    // Додаємо контейнер для кожної категорії\n    categories.forEach(category => {\n        const categoryContainer = createCategoryContainer(category);\n        topGamesList.appendChild(categoryContainer);\n    });\n}\n\n// Виклик функції при завантаженні сторінки\ndocument.addEventListener('DOMContentLoaded', () => {\n    try {\n        fetchAndDisplayCategories();\n        fetchAndDisplayGames();\n    } catch (error) {\n        console.error('Error loading games or categories:', error);\n    }\n});","// categoryToggle.js\nimport { getGamesByCategory } from './infoFromDB';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const categoryButtons = document.querySelectorAll(\".category-item\");\n    const mainTitle = document.querySelector(\".topGamesTitle\");\n    const allCategoriesButton = Array.from(categoryButtons).find(btn => btn.textContent.trim() === \"All Categories\");\n    const topGamesList = document.querySelector(\".top-games-list\"); // список, в який додаються картки ігор\n\n    function checkAndActivateAllCategories() {\n        if (mainTitle.textContent.trim() === \"Most Popular Games\") {\n            categoryButtons.forEach((btn) => btn.classList.remove(\"active-category\"));\n            allCategoriesButton.classList.add(\"active-category\");\n            topGamesList.classList.remove(\"category-active\"); // Видаляємо клас, якщо активна \"All Categories\"\n        }\n    }\n\n    function resetCategories() {\n    \n\n        // Встановити заголовок за замовчуванням\n        mainTitle.innerHTML = \"Most Popular Games\";\n\n        // Видалити клас category-active, щоб стилі для карток не застосовувалися\n        topGamesList.classList.remove(\"category-active\");\n\n        // Очистити список карток, щоб видалити всі додані ігри\n        //topGamesList.innerHTML = \"\";\n\n        // Активувати кнопку \"All Categories\" і зняти активний стиль з інших\n        checkAndActivateAllCategories();\n    }\n\n    // Обробка натискання на кнопку \"All Categories\"\n    allCategoriesButton.addEventListener(\"click\", resetCategories);\n\n    categoryButtons.forEach((button) => {\n        button.addEventListener(\"click\", () => {\n            const selectedCategory = button.textContent.trim().toUpperCase();\n\n            if (selectedCategory === \"ALL CATEGORIES\") {\n                resetCategories();\n            } else {\n                // Оновлення заголовку до вибраної категорії\n                mainTitle.innerHTML = `${selectedCategory} Games`;\n\n                // Додати активний стиль до вибраної категорії та видалити з \"All Categories\"\n                categoryButtons.forEach((btn) => btn.classList.remove(\"active-category\"));\n                button.classList.add(\"active-category\");\n\n                // Показати лише вибрану категорію, а інші категорії приховати\n                document.querySelectorAll(\".game-category\").forEach((category) => {\n                    category.style.display = category.getAttribute(\"data-category\").toUpperCase() === selectedCategory ? \"block\" : \"none\";\n                });\n\n                // Додаємо клас category-active для стилів карток\n                topGamesList.classList.add(\"category-active\");\n\n                // Додав перевірку на те, чи ширина екрану є малою (<= 768 пікселів),\n                // щоб ховати список категорій після його натиснення\n                if (window.innerWidth <= 768) {\n                    const aside = document.getElementsByTagName('aside')[0];\n                    aside.style.display = 'none';\n                }\n            }\n        });\n    });\n\n    // Додаємо обробник події для всіх кнопок \"See More\"\n    document.querySelectorAll(\".see-more\").forEach(button => {\n        button.addEventListener(\"click\", () => {\n            const categoryName = button.id.replace(\"see-more-\", \"\").replace(\"_\", \" \"); // Отримуємо ім'я категорії з id кнопки\n            const games = getGamesByCategory(categoryName); // Отримуємо ігри для вибраної категорії\n\n            // Оновлення заголовка на назву вибраної категорії\n            mainTitle.innerHTML = `${categoryName} Games`;\n\n            // Сховати всі блоки категорій\n            document.querySelectorAll(\".game-category\").forEach((category) => {\n                category.style.display = \"none\";\n            });\n\n            // Очищення списку ігор перед додаванням нових карток\n            topGamesList.innerHTML = \"\";\n\n            // Додаємо ігри у вигляді карток у список .top-games-list\n            games.forEach(game => {\n                const gameCard = createGameCard(game);\n                topGamesList.appendChild(gameCard);\n            });\n\n            // Додаємо клас category-active для стилів карток\n            topGamesList.classList.add(\"category-active\");\n        });\n    });\n\n    // Перевірка заголовку при завантаженні сторінки\n    checkAndActivateAllCategories();\n});\n\n// Функція для створення HTML для картки гри\nfunction createGameCard(game) {\n    const li = document.createElement('li');\n    li.id = game.id;\n    li.className = 'listener';\n    li.setAttribute('onclick', `openModal('${game.id}')`);\n\n    li.innerHTML = `\n        <div class=\"game-category-card\">\n            <div class=\"overlay-div\">\n                <img class=\"gameByCategory-img\" src=\"${game.image}\" alt=\"${game.title}\">\n                <p class=\"overlay-txt\">quick view</p>\n            </div>\n            <div class=\"game-category-details\">\n                <h3 class=\"game-category-title\">${game.title}</h3>\n                <p class=\"game-category-author\">${game.author}</p>\n            </div>\n        </div>\n    `;\n    return li;\n}\n","import { getGameByID } from './infoFromDB.js';\n\nwindow.openModal = openModal;\n\nconst modal = document.querySelector('.modal');\nconst backdrop = modal.querySelector('.modal-body');\nconst closeModalButton = modal.querySelector('.modal-close');\nconst addToShoppingListButton = modal.querySelector('.add-to-list');\nconst underButtonText = modal.querySelector('.under-btn-text');\nconst hideCardButton = modal.querySelector('.hide-card'); // Кнопка приховування\n\nconst HIDDEN_CARDS_KEY = 'hiddenCards';\n\n// Завантажуємо приховані картки з localStorage\nfunction getHiddenCards() {\n    return JSON.parse(localStorage.getItem(HIDDEN_CARDS_KEY)) || [];\n}\n\n// Зберігаємо приховані картки в localStorage\nfunction saveHiddenCards(hiddenCards) {\n    localStorage.setItem(HIDDEN_CARDS_KEY, JSON.stringify(hiddenCards));\n}\n\n// Оновлюємо статус картки\nfunction toggleHiddenStatus(gameId) {\n    const hiddenCards = getHiddenCards();\n\n    // Якщо картка вже прихована, видаляємо її зі списку\n    if (hiddenCards.includes(gameId)) {\n        const updatedHiddenCards = hiddenCards.filter((id) => id !== gameId);\n        saveHiddenCards(updatedHiddenCards);\n        return false; // Повертаємо статус \"видимий\"\n    }\n\n    // Інакше додаємо картку до списку прихованих\n    hiddenCards.push(gameId);\n    saveHiddenCards(hiddenCards);\n    return true; // Повертаємо статус \"прихований\"\n}\n\nasync function openModal(id) {\n    try {\n        const game = await getGameByID(id);\n        modal.setAttribute('data-game', JSON.stringify(game));\n        renderGameDetails(game);\n\n        modal.classList.add('open');\n        document.body.style.overflow = 'hidden';\n\n        const activeUser = JSON.parse(localStorage.getItem(\"activeUser\"));\n\n        if (activeUser) {\n            const isInList = isGameInShoppingList(game);\n            updateShoppingListButton(isInList);\n            addToShoppingListButton.style.display = \"inline-block\";\n\n            // Відображаємо кнопку тільки для адмінів\n            if (activeUser.role === 'admin') {\n                hideCardButton.style.display = \"inline-block\";\n            } else {\n                hideCardButton.style.display = \"none\";\n            }\n        } else {\n            addToShoppingListButton.style.display = \"none\";\n            hideCardButton.style.display = \"none\"; // Приховуємо кнопку для неавторизованих\n        }\n    } catch (error) {\n        console.error('Error loading game details:', error);\n    }\n}\n\nfunction renderGameDetails(game) {\n    const gameCover = document.querySelector('.game-cover');\n    const gameTitle = document.querySelector('.game-title');\n    const gameAuthor = document.querySelector('.game-author');\n    const gameDescription = document.querySelector('.game-description');\n    const steamLink = document.querySelector('.marketplace-logo.steam');\n    const trailerLink = document.querySelector('.marketplace-logo.trailer');\n\n    gameCover.src = game.image;\n    gameCover.alt = game.title;\n    gameTitle.textContent = game.title;\n    gameAuthor.textContent = `by ${game.author}`;\n    gameDescription.textContent = game.description || \"No description available\";\n\n    steamLink.href = game.links.steam || '#';\n    trailerLink.href = game.links.trailer || '#';\n}\n\nfunction isGameInShoppingList(game) {\n    const activeUser = JSON.parse(localStorage.getItem('activeUser'));\n    const shoppingList = JSON.parse(localStorage.getItem(`cart_${activeUser.id}`)) || [];\n    return shoppingList.includes(game.id);\n}\n\nfunction updateShoppingListButton(isGameInList) {\n    addToShoppingListButton.textContent = isGameInList ? 'Remove from shopping list' : 'Add to shopping list';\n    underButtonText.textContent = isGameInList ? 'Removed from shopping list' : 'Added to shopping list';\n    addToShoppingListButton.classList.add('show-text');\n    setTimeout(() => {\n        addToShoppingListButton.classList.remove('show-text');\n    }, 4000);\n}\n\nfunction handleShoppingListButtonClick(event) {\n    event.stopPropagation();\n\n    const activeUser = JSON.parse(localStorage.getItem('activeUser'));\n    if (!activeUser) {\n        alert(\"You must log in to add games to your shopping list.\");\n        window.location.href = 'auth.html';\n        return;\n    }\n\n    const game = JSON.parse(modal.getAttribute('data-game'));\n    const cartKey = `cart_${activeUser.username}`;\n    const shoppingList = JSON.parse(localStorage.getItem(cartKey)) || [];\n    const isGameInList = shoppingList.includes(game.id);\n\n    if (isGameInList) {\n        const updatedList = shoppingList.filter(id => id !== game.id);\n        localStorage.setItem(cartKey, JSON.stringify(updatedList));\n    } else {\n        shoppingList.push(game.id);\n        localStorage.setItem(cartKey, JSON.stringify(shoppingList));\n    }\n\n    updateShoppingListButton(!isGameInList);\n}\n\nfunction handleHideCardClick() {\n    const game = JSON.parse(modal.getAttribute('data-game'));\n    const activeUser = JSON.parse(localStorage.getItem(\"activeUser\"));\n\n    if (activeUser && activeUser.role === 'admin') {\n        // Адміністратор змінює статус\n        const isNowHidden = toggleHiddenStatus(game.id);\n        alert(`The game \"${game.title}\" is now ${isNowHidden ? \"hidden\" : \"visible\"} for users.`);\n    }\n}\n\naddToShoppingListButton.addEventListener('click', handleShoppingListButtonClick);\nhideCardButton.addEventListener('click', handleHideCardClick);\n\nfunction closeModal() {\n    modal.classList.remove('open');\n    document.body.style.overflow = '';\n}\n\ncloseModalButton.addEventListener('click', closeModal);\nbackdrop.addEventListener('click', function (event) {\n    if (event.target === backdrop) {\n        closeModal();\n    }\n});\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape') {\n        closeModal();\n    }\n});\n","window.openAboutWindow = openAboutWindow;\n// Шукаємо модальне вікно \"About\"\nconst modal = document.querySelectorAll('.modal')[1];\nconst backdrop = modal.querySelector('.modal-body');\nconst closeModalButton = modal.querySelector('.modal-close');\nfunction openAboutWindow() {\n  // Відображаємо вікно та блокуємо прокрутку фону\n  modal.classList.add('open');\n  document.body.style.overflow = 'hidden';\n}\n// Функція для закриття модального вікна\nfunction closeModal() {\n  modal.classList.remove('open');\n  document.body.style.overflow = ''; // Відновлюємо прокрутку фону\n}\ncloseModalButton.addEventListener('click', closeModal);\nbackdrop.addEventListener('click', function (event) {\n  if (event.target === backdrop) {\n    closeModal();\n  }\n});\n// Закриваємо модальне вікно при натисканні на Escape\ndocument.addEventListener('keydown', function (event) {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n});\n","window.openFeedbackWindow = openFeedbackWindow;\n\n// Шукаємо модальне вікно \"Feedback\"\nconst feedbackModal = document.querySelectorAll('.modal')[2];\nconst feedbackBackdrop = feedbackModal.querySelector('.modal-body');\nconst closeFeedbackModalButton = feedbackModal.querySelector('.modal-close');\n\nfunction openFeedbackWindow() {\n  // Відображаємо вікно та блокуємо прокрутку фону\n  feedbackModal.classList.add('open');\n  document.body.style.overflow = 'hidden';\n}\n\n// Функція для закриття модального вікна\nfunction closeFeedbackModal() {\n  feedbackModal.classList.remove('open');\n  document.body.style.overflow = ''; // Відновлюємо прокрутку фону\n}\n\ncloseFeedbackModalButton.addEventListener('click', closeFeedbackModal);\nfeedbackBackdrop.addEventListener('click', function (event) {\n  if (event.target === feedbackBackdrop) {\n    closeFeedbackModal();\n  }\n});\n\n// Закриваємо модальне вікно при натисканні на Escape\ndocument.addEventListener('keydown', function (event) {\n  if (event.key === 'Escape') {\n    closeFeedbackModal();\n  }\n});\n\n// Додавання обробника форми\nconst feedbackForm = document.getElementById('feedback-form');\nfeedbackForm.addEventListener('submit', function (event) {\n  event.preventDefault(); // Запобігаємо перезавантаженню сторінки\n  alert('Thank you for your feedback!');\n  closeFeedbackModal();\n});\n","window.openReviewsWindow = openReviewsWindow;\n\n// Шукаємо модальне вікно \"About\"\nconst modal = document.querySelectorAll('.modal')[3];\nconst backdrop = modal.querySelector('.modal-body');\nconst closeModalButton = modal.querySelector('.modal-close');\n\nfunction openReviewsWindow() {\n  // Відображаємо вікно та блокуємо прокрутку фону\n  modal.classList.add('open');\n  document.body.style.overflow = 'hidden';\n}\n// Функція для закриття модального вікна\nfunction closeModal() {\n  modal.classList.remove('open');\n  document.body.style.overflow = ''; // Відновлюємо прокрутку фону\n}\ncloseModalButton.addEventListener('click', closeModal);\nbackdrop.addEventListener('click', function (event) {\n  if (event.target === backdrop) {\n    closeModal();\n  }\n});\n// Закриваємо модальне вікно при натисканні на Escape\ndocument.addEventListener('keydown', function (event) {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n});\n"],"names":["GlowEffectsManager$1","options","styleSheet","maxWidth","maxHeight","existingPositions","attempts","maxAttempts","x","y","pos","effect","containerHeight","containerWidth","totalEffects","i","position","glowManager","GlowEffectsManager","categories","getAllCategories","categoriesList","mainTitle","topGamesList","allCategoriesItem","resetCategories","category","categoryItem","displayCategoryGames","emptyMessage","categoryName","games","getGamesByCategory","game","gameCard","createGameCard","li","scrollTopButton","HIDDEN_CARDS_KEY","getHiddenCards","topGames","getBooksByTags","loadGames","categoryElement","loader","hiddenCards","activeUser","isAdmin","gamesHTML","gamesListElement","fetchAndDisplayGames","createCategoryContainer","container","titleDiv","loaderDiv","titleSpan","gamesDiv","ul","button","event","scrollFuc","item","fetchAndDisplayCategories","categoryContainer","error","categoryButtons","allCategoriesButton","btn","checkAndActivateAllCategories","selectedCategory","aside","openModal","modal","backdrop","closeModalButton","addToShoppingListButton","underButtonText","hideCardButton","saveHiddenCards","toggleHiddenStatus","gameId","updatedHiddenCards","id","getGameByID","renderGameDetails","isInList","isGameInShoppingList","updateShoppingListButton","gameCover","gameTitle","gameAuthor","gameDescription","steamLink","trailerLink","isGameInList","handleShoppingListButtonClick","cartKey","shoppingList","updatedList","handleHideCardClick","isNowHidden","closeModal","openAboutWindow","openFeedbackWindow","feedbackModal","feedbackBackdrop","closeFeedbackModalButton","closeFeedbackModal","feedbackForm","openReviewsWindow"],"mappings":"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"}