{"version":3,"file":"main-Cq0vlRZr.js","sources":["../../src/js/header.js","../../src/js/infoFromDB.js","../../src/main.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n    const currentPath = window.location.pathname;\n    const homeLink = document.querySelector(\".home\");\n    const shoppingListLink = document.querySelector(\".shopping-list\");\n\n    // if (currentPath.includes(\"index.html\")) {\n    //     homeLink.classList.add(\"active\");\n    // } else if (currentPath.includes(\"shopping-list.html\")) {\n    //     shoppingListLink.classList.add(\"active\");\n    // }\n\n    if (currentPath.includes(\"shopping-list.html\")) {\n        shoppingListLink.classList.add(\"active\");\n    }\n    else {\n        homeLink.classList.add(\"active\");\n    }\n});\n\n// Функція для відображення списку категорій при натисканні\n// на кнопку меню (\"сендвіч\") на маленьких екранах \nfunction displayCategoriesList() {\n    const aside = document.getElementsByTagName(\"aside\")[0];\n    if (aside.style.display === 'block') {\n      aside.style.display = 'none';\n    } else {\n      aside.style.display = 'block';\n    }\n}\n\nconst aside = document.getElementsByTagName('aside')[0];\n\nconst hamburger = document.querySelector('.hamburger-image');\nhamburger.addEventListener('click', displayCategoriesList);\n\n// Перевірка, чи елемент 'aside' (список категорій) присутній на сторінці\n// Інакше, \"сендвіч\" не потрібно відображати\nif (aside != null) {\n    // Спостереження за тим, чи відображається іконка меню (\"сендвіч\")\n    // Якщо при розширенні екрану список категорій не відображено,\n    // а іконка меню (\"сендвіч\") сщезла, то потрібно відобразити цей список\n    const resizewatcher = new ResizeObserver(entries => {\n    for (const entry of entries) {\n        if (entry.contentRect.width == 0) {\n        aside.style.display = 'block';\n        } else {\n        aside.style.display = 'none';\n        }\n    }\n    });\n    resizewatcher.observe(hamburger);\n} else {\n    hamburger.style.display = 'none';\n}\n\n\n\n","import game from '../database/database.json' assert { type: 'json' };\n\n\nexport function getGameByID(id) {\n  return game.find(game => game.id === id) || \"Game not found\";\n}\n\n\nfunction getGameByCategory(category) {\n  return game.filter(game => game.tags.includes(category)) || \"No Game found for this category\";\n}\n\n//! Функція для отримання всіх унікальних категорій з бази даних\nexport function getAllCategories() {\n  const categories = new Set();  // Використовуємо Set для унікальності\n  game.forEach(game => game.tags.forEach(tag => categories.add(tag)));  // Додаємо всі теги\n  return Array.from(categories);  // Повертаємо масив унікальних категорій\n}\n\n\n\n\n//! Функція для отримання масиву імен усіх ігор\nfunction getAllGameTitles() {\n  return game.map(item => item.title); // Повертає масив назв усіх ігор\n}\n\n//! Функція для вибору ігор по категоріях (по 5 ігор кожної категорії)\nexport function getBooksByTags(tags) {\n  // Об'єкт для зберігання результату по кожній категорії\n  const booksByTags = {};\n\n  // Проходимо по кожній категорії з переданого списку\n  tags.forEach(tag => {\n    // Фільтруємо книги, які мають поточний тег (tag)\n    const booksForTag = game.filter(book => book.tags.includes(tag));\n\n    // Зберігаємо не більше 5 книг для кожної категорії\n    booksByTags[tag] = booksForTag.slice(0, 5);\n  });\n\n  // Повертаємо результат\n  return booksByTags;\n}\n\n\n//! Функція для отримання всіх ігор за заданою категорією\nexport function getGamesByCategory(category) {\n  return game.filter(game => game.tags.includes(category)) || \"No Game found for this category\";\n}\n","import { getAllCategories, getGamesByCategory } from './js/infoFromDB.js';\n\n// Витягаємо всі категорії з бази даних\nconst categories = getAllCategories();\n\n// Знаходимо контейнер для списку категорій\nconst categoriesList = document.querySelector('.categories-list');\n\n// Створення заголовка\nconst mainTitle = document.querySelector(\".topGamesTitle\");\n// Контейнер для списку ігор\nconst topGamesList = document.querySelector(\".top-games-list\");\n\n// Додаємо \"All Categories\" у список\nconst allCategoriesItem = document.createElement('li');\nallCategoriesItem.classList.add('category-item');\nallCategoriesItem.textContent = \"All Categories\";\ncategoriesList.appendChild(allCategoriesItem);\n\n// Додаємо обробник події для кнопки \"All Categories\"\nallCategoriesItem.addEventListener(\"click\", resetCategories);\n\n// Додаємо категорії у список і обробник події для кожної\nif (categories.length > 0) {\n  categories.forEach(category => {\n    const categoryItem = document.createElement('li');\n    categoryItem.classList.add('category-item');\n    categoryItem.textContent = category;\n    categoriesList.appendChild(categoryItem);\n\n    // Обробник події для кожної категорії\n    categoryItem.addEventListener(\"click\", () => {\n      displayCategoryGames(category);\n    });\n  });\n} else {\n  const emptyMessage = document.createElement('li');\n  emptyMessage.textContent = \"No categories available\";\n  categoriesList.appendChild(emptyMessage);\n}\n\n// Функція для відображення ігор за категорією\nfunction displayCategoryGames(categoryName) {\n  const games = getGamesByCategory(categoryName); // Отримуємо ігри для вибраної категорії\n\n  // Оновлення заголовка на назву вибраної категорії\n  mainTitle.innerHTML = `${categoryName} Games`;\n\n  // Сховати всі блоки категорій\n  document.querySelectorAll(\".game-category\").forEach((category) => {\n    category.style.display = \"none\";\n  });\n\n  // Очищення списку ігор перед додаванням нових карток\n  topGamesList.innerHTML = \"\";\n\n  // Додаємо ігри у вигляді карток у список .top-games-list\n  games.forEach(game => {\n    const gameCard = createGameCard(game);\n    topGamesList.appendChild(gameCard);\n  });\n\n  // Додаємо клас category-active для стилів карток\n  topGamesList.classList.add(\"category-active\");\n}\n\n// Функція для скидання до початкового стану (\"All Categories\")\nfunction resetCategories() {\n  location.reload()\n}\n\n// Функція для перевірки на активність \"All Categories\"\nfunction checkAndActivateAllCategories() {\n  document.querySelectorAll(\".category-item\").forEach((btn) => btn.classList.remove(\"active-category\"));\n  allCategoriesItem.classList.add(\"active-category\");\n}\n\n// Функція для створення HTML для картки гри\nfunction createGameCard(game) {\n  const li = document.createElement('li');\n  li.id = game.id;\n  li.className = 'listener';\n  li.setAttribute('onclick', `openModal('${game.id}')`);\n\n  li.innerHTML = `\n        <div class=\"game-category-card\">\n            <div class=\"overlay-div\">\n                <img class=\"gameByCategory-img\" src=\"${game.image}\" alt=\"${game.title}\">\n                <p class=\"overlay-txt\">quick view</p>\n            </div>\n            <div class=\"game-category-details\">\n                <h3 class=\"game-category-title\">${game.title}</h3>\n                <p class=\"game-category-author\">${game.author}</p>\n            </div>\n        </div>\n    `;\n  return li;\n}\n"],"names":["currentPath","homeLink","shoppingListLink","displayCategoriesList","aside","hamburger","entries","entry","getGameByID","id","game","getAllCategories","categories","tag","getBooksByTags","tags","booksByTags","booksForTag","book","getGamesByCategory","category","categoriesList","mainTitle","topGamesList","allCategoriesItem","resetCategories","categoryItem","displayCategoryGames","emptyMessage","categoryName","games","gameCard","createGameCard","li"],"mappings":"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"}