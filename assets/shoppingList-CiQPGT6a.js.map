{"version":3,"file":"shoppingList-CiQPGT6a.js","sources":["../../src/js/header.js","../../src/js/infoFromDB.js","../../src/js/glow-effects.js","../../src/main.js","../../src/js/shoppingList.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n    const currentPath = window.location.pathname;\n    const homeLink = document.querySelector(\".home\");\n    const shoppingListLink = document.querySelector(\".shopping-list\");\n\n    // if (currentPath.includes(\"index.html\")) {\n    //     homeLink.classList.add(\"active\");\n    // } else if (currentPath.includes(\"shopping-list.html\")) {\n    //     shoppingListLink.classList.add(\"active\");\n    // }\n\n    if (currentPath.includes(\"shopping-list.html\")) {\n        shoppingListLink.classList.add(\"active\");\n    }\n    else {\n        homeLink.classList.add(\"active\");\n    }\n});\n\n// Функція для відображення списку категорій при натисканні\n// на кнопку меню (\"сендвіч\") на маленьких екранах \nfunction displayCategoriesList() {\n    const aside = document.getElementsByTagName(\"aside\")[0];\n    if (aside.style.display === 'block') {\n      aside.style.display = 'none';\n    } else {\n      aside.style.display = 'block';\n    }\n}\n\nconst aside = document.getElementsByTagName('aside')[0];\n\nconst hamburger = document.querySelector('.hamburger-image');\nhamburger.addEventListener('click', displayCategoriesList);\n\n// Перевірка, чи елемент 'aside' (список категорій) присутній на сторінці\n// Інакше, \"сендвіч\" не потрібно відображати\nif (aside != null) {\n    // Спостереження за тим, чи відображається іконка меню (\"сендвіч\")\n    // Якщо при розширенні екрану список категорій не відображено,\n    // а іконка меню (\"сендвіч\") сщезла, то потрібно відобразити цей список\n    const resizewatcher = new ResizeObserver(entries => {\n    for (const entry of entries) {\n        if (entry.contentRect.width == 0) {\n        aside.style.display = 'block';\n        } else {\n        aside.style.display = 'none';\n        }\n    }\n    });\n    resizewatcher.observe(hamburger);\n} else {\n    hamburger.style.display = 'none';\n}\n\n\n\n","import game from '../database/database.json' assert { type: 'json' };\n\n\nexport function getGameByID(id) {\n  return game.find(game => game.id === id) || \"Game not found\";\n}\n\n\nfunction getGameByCategory(category) {\n  return game.filter(game => game.tags.includes(category)) || \"No Game found for this category\";\n}\n\n//! Функція для отримання всіх унікальних категорій з бази даних\nexport function getAllCategories() {\n  const categories = new Set();  // Використовуємо Set для унікальності\n  game.forEach(game => game.tags.forEach(tag => categories.add(tag)));  // Додаємо всі теги\n  return Array.from(categories);  // Повертаємо масив унікальних категорій\n}\n\n\n\n\n//! Функція для отримання масиву імен усіх ігор\nfunction getAllGameTitles() {\n  return game.map(item => item.title); // Повертає масив назв усіх ігор\n}\n\n//! Функція для вибору ігор по категоріях (по 5 ігор кожної категорії)\nexport function getBooksByTags(tags) {\n  // Об'єкт для зберігання результату по кожній категорії\n  const booksByTags = {};\n\n  // Проходимо по кожній категорії з переданого списку\n  tags.forEach(tag => {\n    // Фільтруємо книги, які мають поточний тег (tag)\n    const booksForTag = game.filter(book => book.tags.includes(tag));\n\n    // Зберігаємо не більше 5 книг для кожної категорії\n    booksByTags[tag] = booksForTag.slice(0, 5);\n  });\n\n  // Повертаємо результат\n  return booksByTags;\n}\n\n\n//! Функція для отримання всіх ігор за заданою категорією\nexport function getGamesByCategory(category) {\n  return game.filter(game => game.tags.includes(category)) || \"No Game found for this category\";\n}\n","class GlowEffectsManager {\n  constructor(options = {}) {\n    this.options = {\n      glowSize: options.glowSize || 200,\n      minDistance: options.minDistance || 300, // Мінімальна відстань між ефектами\n      effectsPerSection: options.effectsPerSection || 3, // Кількість ефектів на кожні 1000px висоти\n      sectionHeight: options.sectionHeight || 1000, // Висота секції в пікселях\n      containerSelector: options.containerSelector || 'body'\n    };\n    \n    this.container = document.querySelector(this.options.containerSelector);\n    this.effects = [];\n    \n    // Створюємо стилі\n    this.createStyles();\n    \n    // Ініціалізуємо ефекти\n    this.init();\n    \n    // Додаємо слухач на зміну розміру вікна\n    window.addEventListener('resize', this.handleResize.bind(this));\n  }\n\n  createStyles() {\n    const styleSheet = document.createElement('style');\n    styleSheet.textContent = `\n      .glow-effect {\n        position: absolute;\n        width: ${this.options.glowSize}px;\n        height: ${this.options.glowSize}px;\n        background: radial-gradient(circle, rgba(255, 255, 255, 0.3), transparent);\n        filter: blur(100px);\n        opacity: 0.6;\n        pointer-events: none;\n        transition: transform 0.5s ease;\n        animation: glowAnimation 7s infinite alternate;\n      }\n\n      @keyframes glowAnimation {\n        0% {\n          transform: translate(0, 0);\n        }\n        100% {\n          transform: translate(50px, 50px);\n        }\n      }\n    `;\n    document.head.appendChild(styleSheet);\n  }\n\n  generateRandomPosition(maxWidth, maxHeight, existingPositions) {\n    let attempts = 0;\n    const maxAttempts = 50;\n    \n    while (attempts < maxAttempts) {\n      const x = Math.random() * (maxWidth - this.options.glowSize);\n      const y = Math.random() * (maxHeight - this.options.glowSize);\n      \n      // Перевіряємо, чи нова позиція достатньо далеко від існуючих\n      const isFarEnough = existingPositions.every(pos => {\n        const distance = Math.sqrt(\n          Math.pow(x - pos.x, 2) + Math.pow(y - pos.y, 2)\n        );\n        return distance >= this.options.minDistance;\n      });\n      \n      if (isFarEnough || attempts === maxAttempts - 1) {\n        return { x, y };\n      }\n      \n      attempts++;\n    }\n  }\n\n  createGlowEffect(x, y) {\n    const effect = document.createElement('div');\n    effect.className = 'glow-effect';\n    effect.style.left = `${x}px`;\n    effect.style.top = `${y}px`;\n    return effect;\n  }\n\n  init() {\n    this.updateEffects();\n  }\n\n  updateEffects() {\n    // Видаляємо всі існуючі ефекти\n    this.effects.forEach(effect => effect.remove());\n    this.effects = [];\n    \n    const containerHeight = Math.max(\n      this.container.scrollHeight,\n      this.container.clientHeight\n    );\n    const containerWidth = this.container.clientWidth;\n    \n    // Розраховуємо кількість потрібних ефектів базуючись на висоті\n    const numberOfSections = Math.ceil(containerHeight / this.options.sectionHeight);\n    const totalEffects = numberOfSections * this.options.effectsPerSection;\n    \n    const existingPositions = [];\n    \n    // Створюємо нові ефекти\n    for (let i = 0; i < totalEffects; i++) {\n      const position = this.generateRandomPosition(\n        containerWidth,\n        containerHeight,\n        existingPositions\n      );\n      \n      existingPositions.push(position);\n      const effect = this.createGlowEffect(position.x, position.y);\n      this.container.appendChild(effect);\n      this.effects.push(effect);\n    }\n  }\n\n  handleResize() {\n    // Використовуємо debounce для оптимізації\n    clearTimeout(this.resizeTimeout);\n    this.resizeTimeout = setTimeout(() => {\n      this.updateEffects();\n    }, 150);\n  }\n}\n\n// Експортуємо клас для використання\nexport default GlowEffectsManager;","import { getAllCategories, getGamesByCategory } from './js/infoFromDB.js';\nimport GlowEffectsManager from './js/glow-effects.js';\n\nconsole.log(\"main.js\");\n\n// Ініціалізуємо менеджер ефектів світіння\nconst glowManager = new GlowEffectsManager({\n  glowSize: 200,\n  minDistance: 300,\n  effectsPerSection: 3,\n  sectionHeight: 1000,\n  containerSelector: 'body'\n});\n\n// Витягаємо всі категорії з бази даних\nconst categories = getAllCategories();\n\n// Знаходимо контейнер для списку категорій\nconst categoriesList = document.querySelector('.categories-list');\n\n// Створення заголовка\nconst mainTitle = document.querySelector(\".topGamesTitle\");\n// Контейнер для списку ігор\nconst topGamesList = document.querySelector(\".top-games-list\");\n\n// Додаємо \"All Categories\" у список\nconst allCategoriesItem = document.createElement('li');\nallCategoriesItem.classList.add('category-item');\nallCategoriesItem.textContent = \"All Categories\";\ncategoriesList.appendChild(allCategoriesItem);\n\n// Додаємо обробник події для кнопки \"All Categories\"\nallCategoriesItem.addEventListener(\"click\", resetCategories);\n\n// Додаємо категорії у список і обробник події для кожної\nif (categories.length > 0) {\n  categories.forEach(category => {\n    const categoryItem = document.createElement('li');\n    categoryItem.classList.add('category-item');\n    categoryItem.textContent = category;\n    categoriesList.appendChild(categoryItem);\n\n    // Обробник події для кожної категорії\n    categoryItem.addEventListener(\"click\", () => {\n      displayCategoryGames(category);\n    });\n  });\n} else {\n  const emptyMessage = document.createElement('li');\n  emptyMessage.textContent = \"No categories available\";\n  categoriesList.appendChild(emptyMessage);\n}\n\n// Функція для відображення ігор за категорією\nfunction displayCategoryGames(categoryName) {\n  const games = getGamesByCategory(categoryName);\n\n  // Оновлення заголовка на назву вибраної категорії\n  mainTitle.innerHTML = `${categoryName} Games`;\n\n  // Сховати всі блоки категорій\n  document.querySelectorAll(\".game-category\").forEach((category) => {\n    category.style.display = \"none\";\n  });\n\n  // Очищення списку ігор перед додаванням нових карток\n  topGamesList.innerHTML = \"\";\n\n  // Додаємо ігри у вигляді карток у список .top-games-list\n  games.forEach(game => {\n    const gameCard = createGameCard(game);\n    topGamesList.appendChild(gameCard);\n  });\n\n  // Додаємо клас category-active для стилів карток\n  topGamesList.classList.add(\"category-active\");\n\n  // Оновлюємо ефекти світіння після зміни контенту\n  setTimeout(() => {\n    glowManager.updateEffects();\n  }, 100);\n}\n\n// Функція для скидання до початкового стану (\"All Categories\")\nfunction resetCategories() {\n  location.reload();\n}\n\n// Функція для перевірки на активність \"All Categories\"\nfunction checkAndActivateAllCategories() {\n  document.querySelectorAll(\".category-item\").forEach((btn) => btn.classList.remove(\"active-category\"));\n  allCategoriesItem.classList.add(\"active-category\");\n}\n\n// Функція для створення HTML для картки гри\nfunction createGameCard(game) {\n  const li = document.createElement('li');\n  li.id = game.id;\n  li.className = 'listener';\n  li.setAttribute('onclick', `openModal('${game.id}')`);\n\n  li.innerHTML = `\n        <div class=\"game-category-card\">\n            <div class=\"overlay-div\">\n                <img class=\"gameByCategory-img\" src=\"${game.image}\" alt=\"${game.title}\">\n                <p class=\"overlay-txt\">quick view</p>\n            </div>\n            <div class=\"game-category-details\">\n                <h3 class=\"game-category-title\">${game.title}</h3>\n                <p class=\"game-category-author\">${game.author}</p>\n            </div>\n        </div>\n    `;\n  return li;\n}\n\n// Оновлюємо ефекти світіння при завантаженні сторінки\nwindow.addEventListener('load', () => {\n  glowManager.updateEffects();\n});\n\n// Оновлюємо ефекти при зміні розміру вікна\nwindow.addEventListener('resize', () => {\n  clearTimeout(window.resizeTimer);\n  window.resizeTimer = setTimeout(() => {\n    glowManager.updateEffects();\n  }, 250);\n});","document.addEventListener(\"DOMContentLoaded\", function () {\n    console.log(\"shopping list js is connected\");\n    const shoppingListContainer = document.querySelector(\"#shopping-list-container\");\n    const emptyCartMessage = document.querySelector(\".empty-cart\");\n\n    // Отримання даних з Local Storage\n    let games = JSON.parse(localStorage.getItem(\"shoppingList\")) || [];\n    console.log(\"data from local storage:\", games);\n    if (games.length === 0) {\n        emptyCartMessage.style.display = \"block\"; // Показує повідомлення про порожній кошик\n    } else {\n        emptyCartMessage.style.display = \"none\"; // Приховує повідомлення про порожній кошик\n\n        games.forEach((game, index) => {\n            const gameCard = document.createElement(\"div\");\n            gameCard.classList.add(\"game-card\");\n\n            gameCard.innerHTML = `\n                <div class=\"game-info\">\n                    <button class=\"remove-button\" data-index=\"${index}\">&times;</button>\n                    <img src=\"${game.image}\" alt=\"${game.title}\" class=\"game-image\">\n                    <div class=\"game-details\">\n                        <h3 class=\"game-title\">${game.title}</h3>\n                        <p class=\"game-description\">${game.description}</p>\n                    </div>\n                </div>\n            `;\n\n            shoppingListContainer.appendChild(gameCard);\n        });\n    }\n\n    // Обробник видалення гри зі списку без перезавантаження сторінки\n    shoppingListContainer.addEventListener(\"click\", function (e) {\n        if (e.target.classList.contains(\"remove-button\")) {\n            const index = e.target.getAttribute(\"data-index\");\n            games.splice(index, 1);\n            localStorage.setItem(\"shoppingList\", JSON.stringify(games));\n            e.target.closest(\".game-card\").remove(); // Видаляє елемент зі сторінки\n            if (games.length === 0) {\n                emptyCartMessage.style.display = \"block\"; // Показує повідомлення про порожній кошик\n            }\n        }\n    });\n});\n\n"],"names":["currentPath","homeLink","shoppingListLink","displayCategoriesList","aside","hamburger","entries","entry","getGameByID","id","game","getAllCategories","categories","tag","getBooksByTags","tags","booksByTags","booksForTag","book","getGamesByCategory","category","GlowEffectsManager","options","styleSheet","maxWidth","maxHeight","existingPositions","attempts","maxAttempts","x","y","pos","effect","containerHeight","containerWidth","totalEffects","i","position","glowManager","categoriesList","mainTitle","topGamesList","allCategoriesItem","resetCategories","categoryItem","displayCategoryGames","emptyMessage","categoryName","games","gameCard","createGameCard","li","shoppingListContainer","emptyCartMessage","index","e"],"mappings":"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"}